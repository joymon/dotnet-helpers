### YamlMime:XRefMap
sorted: true
references:
- uid: DotNet.Helpers.Core
  name: DotNet.Helpers.Core
  href: api/DotNet.Helpers.Core.html
  commentId: N:DotNet.Helpers.Core
  fullName: DotNet.Helpers.Core
  nameWithType: DotNet.Helpers.Core
- uid: DotNet.Helpers.Core.ActionExtensions
  name: ActionExtensions
  href: api/DotNet.Helpers.Core.ActionExtensions.html
  commentId: T:DotNet.Helpers.Core.ActionExtensions
  fullName: DotNet.Helpers.Core.ActionExtensions
  nameWithType: ActionExtensions
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatch(System.Action,System.Action{System.Exception})
  name: ExecuteWithCatch(Action, Action<Exception>)
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithCatch_System_Action_System_Action_System_Exception__
  commentId: M:DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatch(System.Action,System.Action{System.Exception})
  name.vb: ExecuteWithCatch(Action, Action(Of Exception))
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatch(System.Action, System.Action<System.Exception>)
  fullName.vb: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatch(System.Action, System.Action(Of System.Exception))
  nameWithType: ActionExtensions.ExecuteWithCatch(Action, Action<Exception>)
  nameWithType.vb: ActionExtensions.ExecuteWithCatch(Action, Action(Of Exception))
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatch*
  name: ExecuteWithCatch
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithCatch_
  commentId: Overload:DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatch
  isSpec: "True"
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatch
  nameWithType: ActionExtensions.ExecuteWithCatch
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatchAndFinally(System.Action,System.Action{System.Exception},System.Action)
  name: ExecuteWithCatchAndFinally(Action, Action<Exception>, Action)
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithCatchAndFinally_System_Action_System_Action_System_Exception__System_Action_
  commentId: M:DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatchAndFinally(System.Action,System.Action{System.Exception},System.Action)
  name.vb: ExecuteWithCatchAndFinally(Action, Action(Of Exception), Action)
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatchAndFinally(System.Action, System.Action<System.Exception>, System.Action)
  fullName.vb: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatchAndFinally(System.Action, System.Action(Of System.Exception), System.Action)
  nameWithType: ActionExtensions.ExecuteWithCatchAndFinally(Action, Action<Exception>, Action)
  nameWithType.vb: ActionExtensions.ExecuteWithCatchAndFinally(Action, Action(Of Exception), Action)
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatchAndFinally*
  name: ExecuteWithCatchAndFinally
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithCatchAndFinally_
  commentId: Overload:DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatchAndFinally
  isSpec: "True"
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithCatchAndFinally
  nameWithType: ActionExtensions.ExecuteWithCatchAndFinally
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry*
  name: ExecuteWithRetry
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithRetry_
  commentId: Overload:DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry
  isSpec: "True"
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry
  nameWithType: ActionExtensions.ExecuteWithRetry
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry``1(System.Action)
  name: ExecuteWithRetry<ExceptionType>(Action)
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithRetry__1_System_Action_
  commentId: M:DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry``1(System.Action)
  name.vb: ExecuteWithRetry(Of ExceptionType)(Action)
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry<ExceptionType>(System.Action)
  fullName.vb: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry(Of ExceptionType)(System.Action)
  nameWithType: ActionExtensions.ExecuteWithRetry<ExceptionType>(Action)
  nameWithType.vb: ActionExtensions.ExecuteWithRetry(Of ExceptionType)(Action)
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry``1(System.Action,System.Int32[])
  name: ExecuteWithRetry<ExceptionType>(Action, Int32[])
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithRetry__1_System_Action_System_Int32___
  commentId: M:DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry``1(System.Action,System.Int32[])
  name.vb: ExecuteWithRetry(Of ExceptionType)(Action, Int32())
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry<ExceptionType>(System.Action, System.Int32[])
  fullName.vb: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry(Of ExceptionType)(System.Action, System.Int32())
  nameWithType: ActionExtensions.ExecuteWithRetry<ExceptionType>(Action, Int32[])
  nameWithType.vb: ActionExtensions.ExecuteWithRetry(Of ExceptionType)(Action, Int32())
- uid: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry``1(System.Action,System.Int32[],System.Predicate{``0})
  name: ExecuteWithRetry<ExceptionType>(Action, Int32[], Predicate<ExceptionType>)
  href: api/DotNet.Helpers.Core.ActionExtensions.html#DotNet_Helpers_Core_ActionExtensions_ExecuteWithRetry__1_System_Action_System_Int32___System_Predicate___0__
  commentId: M:DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry``1(System.Action,System.Int32[],System.Predicate{``0})
  name.vb: ExecuteWithRetry(Of ExceptionType)(Action, Int32(), Predicate(Of ExceptionType))
  fullName: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry<ExceptionType>(System.Action, System.Int32[], System.Predicate<ExceptionType>)
  fullName.vb: DotNet.Helpers.Core.ActionExtensions.ExecuteWithRetry(Of ExceptionType)(System.Action, System.Int32(), System.Predicate(Of ExceptionType))
  nameWithType: ActionExtensions.ExecuteWithRetry<ExceptionType>(Action, Int32[], Predicate<ExceptionType>)
  nameWithType.vb: ActionExtensions.ExecuteWithRetry(Of ExceptionType)(Action, Int32(), Predicate(Of ExceptionType))
- uid: DotNet.Helpers.Core.Configurations
  name: Configurations
  href: api/DotNet.Helpers.Core.Configurations.html
  commentId: T:DotNet.Helpers.Core.Configurations
  fullName: DotNet.Helpers.Core.Configurations
  nameWithType: Configurations
- uid: DotNet.Helpers.Core.Configurations.Get*
  name: Get
  href: api/DotNet.Helpers.Core.Configurations.html#DotNet_Helpers_Core_Configurations_Get_
  commentId: Overload:DotNet.Helpers.Core.Configurations.Get
  isSpec: "True"
  fullName: DotNet.Helpers.Core.Configurations.Get
  nameWithType: Configurations.Get
- uid: DotNet.Helpers.Core.Configurations.Get``1(System.String,System.Func{``0})
  name: Get<ResultType>(String, Func<ResultType>)
  href: api/DotNet.Helpers.Core.Configurations.html#DotNet_Helpers_Core_Configurations_Get__1_System_String_System_Func___0__
  commentId: M:DotNet.Helpers.Core.Configurations.Get``1(System.String,System.Func{``0})
  name.vb: Get(Of ResultType)(String, Func(Of ResultType))
  fullName: DotNet.Helpers.Core.Configurations.Get<ResultType>(System.String, System.Func<ResultType>)
  fullName.vb: DotNet.Helpers.Core.Configurations.Get(Of ResultType)(System.String, System.Func(Of ResultType))
  nameWithType: Configurations.Get<ResultType>(String, Func<ResultType>)
  nameWithType.vb: Configurations.Get(Of ResultType)(String, Func(Of ResultType))
- uid: DotNet.Helpers.Core.FuncExtensions
  name: FuncExtensions
  href: api/DotNet.Helpers.Core.FuncExtensions.html
  commentId: T:DotNet.Helpers.Core.FuncExtensions
  fullName: DotNet.Helpers.Core.FuncExtensions
  nameWithType: FuncExtensions
- uid: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry*
  name: ExecuteWithRetry
  href: api/DotNet.Helpers.Core.FuncExtensions.html#DotNet_Helpers_Core_FuncExtensions_ExecuteWithRetry_
  commentId: Overload:DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry
  isSpec: "True"
  fullName: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry
  nameWithType: FuncExtensions.ExecuteWithRetry
- uid: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry``2(System.Func{``0},System.Int32[])
  name: ExecuteWithRetry<ResultType, ExceptionType>(Func<ResultType>, Int32[])
  href: api/DotNet.Helpers.Core.FuncExtensions.html#DotNet_Helpers_Core_FuncExtensions_ExecuteWithRetry__2_System_Func___0__System_Int32___
  commentId: M:DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry``2(System.Func{``0},System.Int32[])
  name.vb: ExecuteWithRetry(Of ResultType, ExceptionType)(Func(Of ResultType), Int32())
  fullName: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry<ResultType, ExceptionType>(System.Func<ResultType>, System.Int32[])
  fullName.vb: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry(Of ResultType, ExceptionType)(System.Func(Of ResultType), System.Int32())
  nameWithType: FuncExtensions.ExecuteWithRetry<ResultType, ExceptionType>(Func<ResultType>, Int32[])
  nameWithType.vb: FuncExtensions.ExecuteWithRetry(Of ResultType, ExceptionType)(Func(Of ResultType), Int32())
- uid: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry``2(System.Func{``0},System.Int32[],System.Predicate{``1})
  name: ExecuteWithRetry<ResultType, ExceptionType>(Func<ResultType>, Int32[], Predicate<ExceptionType>)
  href: api/DotNet.Helpers.Core.FuncExtensions.html#DotNet_Helpers_Core_FuncExtensions_ExecuteWithRetry__2_System_Func___0__System_Int32___System_Predicate___1__
  commentId: M:DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry``2(System.Func{``0},System.Int32[],System.Predicate{``1})
  name.vb: ExecuteWithRetry(Of ResultType, ExceptionType)(Func(Of ResultType), Int32(), Predicate(Of ExceptionType))
  fullName: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry<ResultType, ExceptionType>(System.Func<ResultType>, System.Int32[], System.Predicate<ExceptionType>)
  fullName.vb: DotNet.Helpers.Core.FuncExtensions.ExecuteWithRetry(Of ResultType, ExceptionType)(System.Func(Of ResultType), System.Int32(), System.Predicate(Of ExceptionType))
  nameWithType: FuncExtensions.ExecuteWithRetry<ResultType, ExceptionType>(Func<ResultType>, Int32[], Predicate<ExceptionType>)
  nameWithType.vb: FuncExtensions.ExecuteWithRetry(Of ResultType, ExceptionType)(Func(Of ResultType), Int32(), Predicate(Of ExceptionType))
- uid: DotNet.Helpers.Linq
  name: DotNet.Helpers.Linq
  href: api/DotNet.Helpers.Linq.html
  commentId: N:DotNet.Helpers.Linq
  fullName: DotNet.Helpers.Linq
  nameWithType: DotNet.Helpers.Linq
- uid: DotNet.Helpers.Linq.EnumerableExtensions
  name: EnumerableExtensions
  href: api/DotNet.Helpers.Linq.EnumerableExtensions.html
  commentId: T:DotNet.Helpers.Linq.EnumerableExtensions
  fullName: DotNet.Helpers.Linq.EnumerableExtensions
  nameWithType: EnumerableExtensions
- uid: DotNet.Helpers.Linq.EnumerableExtensions.Chunk*
  name: Chunk
  href: api/DotNet.Helpers.Linq.EnumerableExtensions.html#DotNet_Helpers_Linq_EnumerableExtensions_Chunk_
  commentId: Overload:DotNet.Helpers.Linq.EnumerableExtensions.Chunk
  isSpec: "True"
  fullName: DotNet.Helpers.Linq.EnumerableExtensions.Chunk
  nameWithType: EnumerableExtensions.Chunk
- uid: DotNet.Helpers.Linq.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Chunk<TResult>(IEnumerable<TResult>, Int32)
  href: api/DotNet.Helpers.Linq.EnumerableExtensions.html#DotNet_Helpers_Linq_EnumerableExtensions_Chunk__1_System_Collections_Generic_IEnumerable___0__System_Int32_
  commentId: M:DotNet.Helpers.Linq.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name.vb: Chunk(Of TResult)(IEnumerable(Of TResult), Int32)
  fullName: DotNet.Helpers.Linq.EnumerableExtensions.Chunk<TResult>(System.Collections.Generic.IEnumerable<TResult>, System.Int32)
  fullName.vb: DotNet.Helpers.Linq.EnumerableExtensions.Chunk(Of TResult)(System.Collections.Generic.IEnumerable(Of TResult), System.Int32)
  nameWithType: EnumerableExtensions.Chunk<TResult>(IEnumerable<TResult>, Int32)
  nameWithType.vb: EnumerableExtensions.Chunk(Of TResult)(IEnumerable(Of TResult), Int32)
- uid: DotNet.Helpers.Linq.EnumerableExtensions.Randomize*
  name: Randomize
  href: api/DotNet.Helpers.Linq.EnumerableExtensions.html#DotNet_Helpers_Linq_EnumerableExtensions_Randomize_
  commentId: Overload:DotNet.Helpers.Linq.EnumerableExtensions.Randomize
  isSpec: "True"
  fullName: DotNet.Helpers.Linq.EnumerableExtensions.Randomize
  nameWithType: EnumerableExtensions.Randomize
- uid: DotNet.Helpers.Linq.EnumerableExtensions.Randomize``1(System.Collections.Generic.IEnumerable{``0})
  name: Randomize<TResult>(IEnumerable<TResult>)
  href: api/DotNet.Helpers.Linq.EnumerableExtensions.html#DotNet_Helpers_Linq_EnumerableExtensions_Randomize__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:DotNet.Helpers.Linq.EnumerableExtensions.Randomize``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: Randomize(Of TResult)(IEnumerable(Of TResult))
  fullName: DotNet.Helpers.Linq.EnumerableExtensions.Randomize<TResult>(System.Collections.Generic.IEnumerable<TResult>)
  fullName.vb: DotNet.Helpers.Linq.EnumerableExtensions.Randomize(Of TResult)(System.Collections.Generic.IEnumerable(Of TResult))
  nameWithType: EnumerableExtensions.Randomize<TResult>(IEnumerable<TResult>)
  nameWithType.vb: EnumerableExtensions.Randomize(Of TResult)(IEnumerable(Of TResult))
- uid: DotNet.Helpers.WinForms
  name: DotNet.Helpers.WinForms
  href: api/DotNet.Helpers.WinForms.html
  commentId: N:DotNet.Helpers.WinForms
  fullName: DotNet.Helpers.WinForms
  nameWithType: DotNet.Helpers.WinForms
- uid: DotNet.Helpers.WinForms.ControlExtensions
  name: ControlExtensions
  href: api/DotNet.Helpers.WinForms.ControlExtensions.html
  commentId: T:DotNet.Helpers.WinForms.ControlExtensions
  fullName: DotNet.Helpers.WinForms.ControlExtensions
  nameWithType: ControlExtensions
- uid: DotNet.Helpers.WinForms.ControlExtensions.ExecuteWithEnableAndDisableAsync(System.Windows.Forms.Control,System.Action)
  name: ExecuteWithEnableAndDisableAsync(Control, Action)
  href: api/DotNet.Helpers.WinForms.ControlExtensions.html#DotNet_Helpers_WinForms_ControlExtensions_ExecuteWithEnableAndDisableAsync_System_Windows_Forms_Control_System_Action_
  commentId: M:DotNet.Helpers.WinForms.ControlExtensions.ExecuteWithEnableAndDisableAsync(System.Windows.Forms.Control,System.Action)
  fullName: DotNet.Helpers.WinForms.ControlExtensions.ExecuteWithEnableAndDisableAsync(System.Windows.Forms.Control, System.Action)
  nameWithType: ControlExtensions.ExecuteWithEnableAndDisableAsync(Control, Action)
- uid: DotNet.Helpers.WinForms.ControlExtensions.ExecuteWithEnableAndDisableAsync*
  name: ExecuteWithEnableAndDisableAsync
  href: api/DotNet.Helpers.WinForms.ControlExtensions.html#DotNet_Helpers_WinForms_ControlExtensions_ExecuteWithEnableAndDisableAsync_
  commentId: Overload:DotNet.Helpers.WinForms.ControlExtensions.ExecuteWithEnableAndDisableAsync
  isSpec: "True"
  fullName: DotNet.Helpers.WinForms.ControlExtensions.ExecuteWithEnableAndDisableAsync
  nameWithType: ControlExtensions.ExecuteWithEnableAndDisableAsync
- uid: DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions
  name: ISynchronizeInvokeExtensions
  href: api/DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.html
  commentId: T:DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions
  fullName: DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions
  nameWithType: ISynchronizeInvokeExtensions
- uid: DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.InvokeIfRequired(System.ComponentModel.ISynchronizeInvoke,System.Action)
  name: InvokeIfRequired(ISynchronizeInvoke, Action)
  href: api/DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.html#DotNet_Helpers_WinForms_ISynchronizeInvokeExtensions_InvokeIfRequired_System_ComponentModel_ISynchronizeInvoke_System_Action_
  commentId: M:DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.InvokeIfRequired(System.ComponentModel.ISynchronizeInvoke,System.Action)
  fullName: DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.InvokeIfRequired(System.ComponentModel.ISynchronizeInvoke, System.Action)
  nameWithType: ISynchronizeInvokeExtensions.InvokeIfRequired(ISynchronizeInvoke, Action)
- uid: DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.InvokeIfRequired*
  name: InvokeIfRequired
  href: api/DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.html#DotNet_Helpers_WinForms_ISynchronizeInvokeExtensions_InvokeIfRequired_
  commentId: Overload:DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.InvokeIfRequired
  isSpec: "True"
  fullName: DotNet.Helpers.WinForms.ISynchronizeInvokeExtensions.InvokeIfRequired
  nameWithType: ISynchronizeInvokeExtensions.InvokeIfRequired
- uid: DotNet.Helpers.WinForms.TextBoxTraceListener
  name: TextBoxTraceListener
  href: api/DotNet.Helpers.WinForms.TextBoxTraceListener.html
  commentId: T:DotNet.Helpers.WinForms.TextBoxTraceListener
  fullName: DotNet.Helpers.WinForms.TextBoxTraceListener
  nameWithType: TextBoxTraceListener
- uid: DotNet.Helpers.WinForms.TextBoxTraceListener.#ctor(System.Windows.Forms.TextBox)
  name: TextBoxTraceListener(TextBox)
  href: api/DotNet.Helpers.WinForms.TextBoxTraceListener.html#DotNet_Helpers_WinForms_TextBoxTraceListener__ctor_System_Windows_Forms_TextBox_
  commentId: M:DotNet.Helpers.WinForms.TextBoxTraceListener.#ctor(System.Windows.Forms.TextBox)
  fullName: DotNet.Helpers.WinForms.TextBoxTraceListener.TextBoxTraceListener(System.Windows.Forms.TextBox)
  nameWithType: TextBoxTraceListener.TextBoxTraceListener(TextBox)
- uid: DotNet.Helpers.WinForms.TextBoxTraceListener.#ctor*
  name: TextBoxTraceListener
  href: api/DotNet.Helpers.WinForms.TextBoxTraceListener.html#DotNet_Helpers_WinForms_TextBoxTraceListener__ctor_
  commentId: Overload:DotNet.Helpers.WinForms.TextBoxTraceListener.#ctor
  isSpec: "True"
  fullName: DotNet.Helpers.WinForms.TextBoxTraceListener.TextBoxTraceListener
  nameWithType: TextBoxTraceListener.TextBoxTraceListener
- uid: DotNet.Helpers.WinForms.TextBoxTraceListener.Write(System.String)
  name: Write(String)
  href: api/DotNet.Helpers.WinForms.TextBoxTraceListener.html#DotNet_Helpers_WinForms_TextBoxTraceListener_Write_System_String_
  commentId: M:DotNet.Helpers.WinForms.TextBoxTraceListener.Write(System.String)
  fullName: DotNet.Helpers.WinForms.TextBoxTraceListener.Write(System.String)
  nameWithType: TextBoxTraceListener.Write(String)
- uid: DotNet.Helpers.WinForms.TextBoxTraceListener.Write*
  name: Write
  href: api/DotNet.Helpers.WinForms.TextBoxTraceListener.html#DotNet_Helpers_WinForms_TextBoxTraceListener_Write_
  commentId: Overload:DotNet.Helpers.WinForms.TextBoxTraceListener.Write
  isSpec: "True"
  fullName: DotNet.Helpers.WinForms.TextBoxTraceListener.Write
  nameWithType: TextBoxTraceListener.Write
- uid: DotNet.Helpers.WinForms.TextBoxTraceListener.WriteLine(System.String)
  name: WriteLine(String)
  href: api/DotNet.Helpers.WinForms.TextBoxTraceListener.html#DotNet_Helpers_WinForms_TextBoxTraceListener_WriteLine_System_String_
  commentId: M:DotNet.Helpers.WinForms.TextBoxTraceListener.WriteLine(System.String)
  fullName: DotNet.Helpers.WinForms.TextBoxTraceListener.WriteLine(System.String)
  nameWithType: TextBoxTraceListener.WriteLine(String)
- uid: DotNet.Helpers.WinForms.TextBoxTraceListener.WriteLine*
  name: WriteLine
  href: api/DotNet.Helpers.WinForms.TextBoxTraceListener.html#DotNet_Helpers_WinForms_TextBoxTraceListener_WriteLine_
  commentId: Overload:DotNet.Helpers.WinForms.TextBoxTraceListener.WriteLine
  isSpec: "True"
  fullName: DotNet.Helpers.WinForms.TextBoxTraceListener.WriteLine
  nameWithType: TextBoxTraceListener.WriteLine
